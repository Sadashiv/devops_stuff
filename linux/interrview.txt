lsof -- > List of open files for particular process
What is the spam module in linux
Spam emails are those unwanted messages sent in bulk, primarily from a commercial advertiser.


What is jumpbox
Bastion hosts (also called “jump servers”) are often used as a best practice for accessing privately
accessible hosts within a system environment.To access it for product updates or managing system patches,
you typically log in to a bastion host and then access (or “jump to”) the application host from there.

lookahead and lookbehind

How to get remote server is up or not in shell script
-> ping -c1 -W1 127.0.0.1 && echo 'server is up' || echo 'server is down'

Find the memory in 
In use: free | grep Mem | awk '{print $3/$2 * 100.0}'
Free memory:  free | grep Mem | awk '{print $4/$2 * 100.0}'

sendmail mutt mail etc -s "Subject line" to_email < body.txt file

grep 
====
grep -i awk *
grep -h awk * #All the files with folder also
grep -L awk * #Displays from files and folders
grep -l awk * #Displays only from directories
grep -v awk filename
#The '-v' option tells the grep to print the lines that do not contain the specified pattern.
grep -n s README.md
grep ^= README.md
grep =$ README.md
grep -w awk README.md
#Match a particular string
grep -w Decorators README.md
grep -R awk * #Recursive search of files and directories
grep -c for * #Count the number of time for found in a file
#Recursively search for a keyword and also get filename using -H (filename), -R (recursive), -i (case-insensitive) flag 
grep -HRi "awk" *
head -1 README.md
tail -n 2 README.md

egrep
=====
Used mainly executes faster than grep and supports extended grep of string
egrep -l  awk linux/interrview.txt 
o/p: linux/interrview.txt
egrep -L  awk linux/interrview.txt 
o/p:

egrep -e  awk linux/interrview.txt #many macthes found
egrep -o awk linux/interrview.txt #only look for particular string
egrep -n awk linux/interrview.txt #print line number with string match
egrep -m 2 awk linux/interrview.txt #search for two time string and exit or comes out
egrep -r -i do * #Search recursively for string in files and folder

find
====
find . -name "*.sh" #List all the shell script files endswith .sh
find . -type f #List all the files in direstory even with hidden files
find /home/sadashiv/ -type d -mtime 2 #List of directories modified two days
find /home/sadashiv/ -type f -mtime 2 #List of files modified two days
#2 exact day #-2 files modified less than two days #+2 files modified more than two days
find . -perm 755 #Find files with permission 755
find /home/sadashiv/ -iname "linux" -print #Find casse insensitive string
find /tmp/ -name "skype*" | xargs rm -f
find /tmp -mtime +14 | xargs rm

The xargs command in UNIX is a command line utility for building an execution pipeline from standard input.
Whilst tools like grep can accept standard input as a parameter, many other tools cannot.
Using xargs allows tools like echo and rm and mkdir to accept standard input as arguments.

time find . -type f -name "*.txt" -exec rm {} \;
0.35s user 0.11s system 99% cpu 0.467 total

time find ./foo -type f -name "*.txt" | xargs rm
0.00s user 0.01s system 75% cpu 0.016 total
Clearly using xargs is far more efficient. In fact several benchmarks suggest using xargs over exec {} is six times more efficient.

echo "one two three"|xargs -t mkdir  #-t prints each time command get executed
echo "one two three"|xargs -I % sh -c 'echo %; mkdir %' #Run multiple commands at a time

find . -size +10000c -exec ls -l {} \; #always mention c means in bytes
find . -size +1000c -size +10000c -exec ls -l {} \; #Take range
find /tmp -type f -empty #Find empty files under directory
find /tmp -type f -name ".*" #Find all the hidden file
find /home/sadashiv/ -user sadashiv -name test.txt #user with sadashiv file names
find / -cmin -60 #File changed in last 1 hour
find / -mmin -60 #File modified in last 1 hour
find / -amin -60
find / -size 50M

find / -perm /u=r #Find all the files with readonly
find / -perm /a=x #Find all the files with executable
find /etc/ -maxdepth 2 -name "*.conf" #Find two level *.conf files





