kubectl get pods --selector env=dev | wc -l
kubectl get pods  -o wide
kubectl get pods --selector bu=finance
kubectl get all --selector env=prod --no-headers|wc -l
kubectl get all --selector env=prod,bu=finance,tier=frontend


DaemonSets

Will be deployed on each node with one pod
which will be used for monitoring solution and logs viewer
DaemonSets are similar to ReplicaSets
only change is kind DaemonSets

kubectl get daemonsets --all-namespaces -o wide
kubectl get daemonsets --all-namespaces
kubectl describe daemonset kube-flannel-ds --namespace=kube-system

kubectl create deployment elasticsearch --image=k8s.gcr.io/fluentd-elasticsearch:1.20 -n kube-system --dry-run=client -o yaml > fluentd.yaml

kubectl create -f fluentd.yaml


Get static pods(Check for name)
kubectl get pods --all-namespaces |grep -i controlplane | wc -l
kubectl run --restart=Never --image=busybox static-busybox --dry-run=client -o yaml --command -- sleep 1000 > /etc/kubernetes/manifests/static-busybox.yaml

kubectl get pods --all-namespaces -o wide  | grep static-greenbox

root@controlplane:~# ssh node01
root@node01:~# ps -ef |  grep /usr/bin/kubelet
root       752   654  0 00:30 pts/0    00:00:00 grep --color=auto /usr/bin/kubelet
root     28567     1  0 00:22 ?        00:00:11 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --network-plugin=cni --pod-infra-container-image=k8s.gcr.io/pause:3.2
root@node01:~# grep -i staticpod /var/lib/kubelet/config.yaml
staticPodPath: /etc/just-to-mess-with-you
root@node01:~#

kubectl describe pod kube-scheduler-controlplane --namespace=kube-system
kubectl describe pod kube-scheduler-controlplane --namespace=kube-system |grep -i image

kubectl get pods
kubectl top node
kubectl top pod
kubectl logs nginx-58687bd566-hptgm
docker run logs containerid

RollingUpdate, Deployment, Recreate

kubectl get pod
kubectl logs webapp-2
kubectl logs webapp-2 -c simple-webapp

kubectl describe deployment
kubectl edit deployment frontend

kubectl get pods  -n default
kubectl describe pod ubuntu-sleeper
command overwrite
command:
  - "sleep"
  - "1200"

environment define in yaml file

env:
 - name:
   value:
 - name:
   value:

other way to do is using configMaps from centralized path

kubectl get configmaps
kubectl describe configmaps
kubectl create configmap webapp-config-map --from-literal=APP_COLOR=darkblue

Secrets

[sadashiv@slave-node ~]$ echo -n "mysql"| base64
bXlzcWw=
[sadashiv@slave-node ~]$ echo -n "bXlzcWw="| base64 --decode
mysql

kubectl get secrets
kubectl describe secrets default-token-6gf8m
kubectl create secret generic db-secret --from-literal=DB_Host=sql01 --from-literal=DB_User=root --from-literal=DB_Password=password123
kubectl get secrets
kubectl delete secret db-secret

Multi container pod

kubectl get pods blue -o jsonpath='{.spec.containers[*].name}'
kubectl describe pod  elastic-search -n  elastic-stack
kubectl -n elastic-stack exec -it app cat /log/app.log

